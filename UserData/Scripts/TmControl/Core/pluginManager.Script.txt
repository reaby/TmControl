// #RequireContext CServerPlugin
#Include "TextLib" as TL
#Include "TMControl/Core/config.Script.txt" as Config
#Include "TMControl/Core/serverManager.Script.txt" as Server
#Include "TMControl/Plugins/ServerAdmin.Script.txt" as ServerAdmin
#Include "TMControl/Plugins/Players.Script.txt" as PlayersPanel
#Include "TMControl/Plugins/Maps.Script.txt" as MapsPanel
/* oh, i wish so much to have dynamic plugin loader...
foreach (Plugin in Config::GetEnabledPlugins()) {
    #Include "TMControl/Plugins/ " ^ Plugin ^ ".Script.txt"
} */

*** OnInit ***
*** 
// this should get run, but never does.
log("PluginManager: OnInit");
***

Void Init() {     
    +++ OnInit +++
    log("""\033[32mHello from plugin manager!\033[0m""");
    PlayersPanel::Init();
    ServerAdmin::Init();
}

Void HandleEvent(CServerPluginEvent Event) {  
    declare CClient Client <=> Event.Client;
    switch (Event.Type) {
        case CServerPluginEvent::EType::ClientDisconnected:  {
            
        }   
        
        case CServerPluginEvent::EType::ClientConnected: {        
            declare Text Login = Client.User.Login;  
            if (Config::isAdmin(Login)) {
                ServerAdmin::SendAdminPanel(Client);
                Server::SendChat("""TmControl> Enabling server administation for you.""", [Client]);
            }        
        }
        
        case CServerPluginEvent::EType::ChatCommand: {            
            if (Config::isAdmin(Client.User.Login)) {                       
                ServerAdmin::OnChat(Client, Event.ChatCommandType, Event.ChatCommandData);
            }
        }        
        default: {  
            log(Event);
        }
    }	
}

Void HandleUiEvent(CUIConfigEvent UiEvent) {

    if (UiEvent.CustomEventType == "TmControl.Server.AddAction") {
        declare Text[] data = UiEvent.CustomEventData;
        if (data.count >= 1) {
            declare Text action = data[0];
            data.removekey(0);
            Server::_AddAction(action,data);    
        } 
    }

    if (UiEvent.CustomEventType == "OpenDialog") {
        declare Text data = UiEvent.CustomEventData[0];
        switch (data) {
            case "!Players": {
                declare CClient Client <=> GetClient(UiEvent.UI);
                PlayersPanel::ShowPlayerAdmin(Client);
            }
            case "!MapList": {
                declare CClient Client <=> GetClient(UiEvent.UI);
                MapsPanel::ShowMaps(Client);
            }
            default: {}
        }  
    }
    
    if (UiEvent.CustomEventType == "TmControl.Plugins.Players") {
        PlayersPanel::OnUiEvent(UiEvent);
    }

    if (UiEvent.CustomEventType == "TmControl.Plugins.Maps") {
        MapsPanel::OnUiEvent(UiEvent);
    }
}